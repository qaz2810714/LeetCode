package Easy;

/**
 * 颠倒二进制数
 *
 *
 颠倒给定的 32 位无符号整数的二进制位。

 示例:

 输入: 43261596
 输出: 964176192
 解释: 43261596 的二进制表示形式为 00000010100101000001111010011100 ，
 返回 964176192，其二进制表示形式为 00111001011110000010100101000000 。
 进阶:
 如果多次调用这个函数，你将如何优化你的算法？
 *
 * @author yang.shang
 * @create 2018-09-17 15:11
 **/
public class ReverseBits {

    //算法思想 循环原数每一位，
    // 原数循环右移，结果循环左移
    // 如果原数最后一位为1则result+1,
    public int reverseBits(int n) {
        int result=0;
        for (int i = 0; i <32 ; i++) {
            if ((n & 1) == 1){
                result++;
            }
            //这里只需要左移31次，因为第一次左移的是第二位数
            if(i<31)
                //新数左移一位
                result <<= 1;
            //旧数
            n >>>= 1;
        }
        return result;
    }
}
